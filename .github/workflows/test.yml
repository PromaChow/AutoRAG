name: Unit Test
on:
  push:
    branches:
      - main

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: '17'
      - name: Update apt-get
        run: 'sudo apt-get update

          '
      - id: measurement-4
        name: Record Measurement After Update apt-get
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Update apt-get
          task: get-measurement
      - name: Install gcc
        run: 'sudo apt-get install gcc

          '
      - id: measurement-6
        name: Record Measurement After Install gcc
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install gcc
          task: get-measurement
      - name: Install poppler-utils
        run: 'sudo apt-get install poppler-utils

          '
      - id: measurement-8
        name: Record Measurement After Install poppler-utils
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install poppler-utils
          task: get-measurement
      - name: Install tesseract
        run: 'sudo apt-get install tesseract-ocr

          '
      - id: measurement-10
        name: Record Measurement After Install tesseract
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install tesseract
          task: get-measurement
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install Python 3.12
        run: uv python install 3.12
      - id: measurement-13
        name: Record Measurement After Install Python 3.12
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install Python 3.12
          task: get-measurement
      - name: Install Venv
        run: uv venv
      - id: measurement-15
        name: Record Measurement After Install Venv
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install Venv
          task: get-measurement
      - name: Install AutoRAG
        run: uv pip install -r pyproject.toml --all-extras -e .
        working-directory: ./autorag
      - id: measurement-17
        name: Record Measurement After Install AutoRAG
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install AutoRAG
          task: get-measurement
      - name: Install dev dependencies
        run: uv pip install --group dev
        working-directory: ./autorag
      - id: measurement-19
        name: Record Measurement After Install dev dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dev dependencies
          task: get-measurement
      - name: Upgrade pyOpenSSL
        run: 'uv pip install --upgrade pyOpenSSL

          '
      - id: measurement-21
        name: Record Measurement After Upgrade pyOpenSSL
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Upgrade pyOpenSSL
          task: get-measurement
      - name: Install NLTK and download model
        run: 'uv pip install nltk

          uv run python -c "import nltk; nltk.download(''punkt_tab'')"

          uv run python -c "import nltk; nltk.download(''averaged_perceptron_tagger_eng'')"

          '
      - id: measurement-23
        name: Record Measurement After Install NLTK and download model
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install NLTK and download model
          task: get-measurement
      - name: delete tests package
        run: uv run python tests/delete_tests.py
      - id: measurement-25
        name: Record Measurement After delete tests package
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: delete tests package
          task: get-measurement
      - env:
          PYTHONPATH: ${PYTHONPATH}:./autorag
        name: Run AutoRAG tests
        run: 'uv run python -m pytest -o log_cli=true --log-cli-level=INFO -n auto
          tests/autorag

          '
      - id: measurement-27
        name: Record Measurement After Run AutoRAG tests
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Run AutoRAG tests
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
